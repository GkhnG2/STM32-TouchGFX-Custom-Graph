/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/customGraphBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

customGraphBase::customGraphBase() :
    graphClickedCallback(this, &customGraphBase::graphClickedCallbackHandler),
    graphDraggedCallback(this, &customGraphBase::graphDraggedCallbackHandler)
{
    setWidth(310);
    setHeight(200);
    box1.setPosition(0, 0, 310, 200);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    graph1.setScaleX(1);
    graph1.setScaleY(10);
    graph1.setPosition(0, 0, 310, 200);
    graph1.setGraphAreaMargin(30, 55, 5, 19);
    graph1.setGraphAreaPadding(0, 0, 0, 0);
    graph1.setGraphRangeX(0, 60);
    graph1.setGraphRangeY(0, 40000);
    graph1.setClickAction(graphClickedCallback);
    graph1.setDragAction(graphDraggedCallback);

    graph1MajorXAxisGrid.setScale(1);
    graph1MajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(0, 97, 170));
    graph1MajorXAxisGrid.setInterval(15);
    graph1MajorXAxisGrid.setLineWidth(1);
    graph1.addGraphElement(graph1MajorXAxisGrid);

    graph1MajorYAxisGrid.setScale(10);
    graph1MajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(0, 97, 170));
    graph1MajorYAxisGrid.setInterval(10000);
    graph1MajorYAxisGrid.setLineWidth(1);
    graph1.addGraphElement(graph1MajorYAxisGrid);

    graph1MajorYAxisLabel.setScale(10);
    graph1MajorYAxisLabel.setInterval(10000);
    graph1MajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_NZ5N));
    graph1MajorYAxisLabel.setLabelDecimals(1);
    graph1MajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    graph1.addLeftElement(graph1MajorYAxisLabel);

    graph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(50, 194, 55));
    graph1Line1.setPainter(graph1Line1Painter);
    graph1Line1.setLineWidth(4);
    graph1.addGraphElement(graph1Line1);

    debugText.setXY(126, 0);
    debugText.setVisible(false);
    debugText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    debugText.setLinespacing(0);
    debugTextBuffer[0] = 0;
    debugText.setWildcard(debugTextBuffer);
    debugText.resizeToCurrentText();
    debugText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PLIR));

    timeLabel4.setXY(278, 183);
    timeLabel4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel4.setLinespacing(0);
    timeLabel4Buffer[0] = 0;
    timeLabel4.setWildcard(timeLabel4Buffer);
    timeLabel4.resizeToCurrentText();
    timeLabel4.setTypedText(touchgfx::TypedText(T_TIMEL4));

    timeLabel3.setXY(215, 183);
    timeLabel3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel3.setLinespacing(0);
    timeLabel3Buffer[0] = 0;
    timeLabel3.setWildcard(timeLabel3Buffer);
    timeLabel3.resizeToCurrentText();
    timeLabel3.setTypedText(touchgfx::TypedText(T_TIMEL3));

    timeLabel2.setXY(151, 183);
    timeLabel2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel2.setLinespacing(0);
    timeLabel2Buffer[0] = 0;
    timeLabel2.setWildcard(timeLabel2Buffer);
    timeLabel2.resizeToCurrentText();
    timeLabel2.setTypedText(touchgfx::TypedText(T_TIMEL2));

    timeLabel1.setXY(84, 183);
    timeLabel1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel1.setLinespacing(0);
    timeLabel1Buffer[0] = 0;
    timeLabel1.setWildcard(timeLabel1Buffer);
    timeLabel1.resizeToCurrentText();
    timeLabel1.setTypedText(touchgfx::TypedText(T_TIMEL1));

    dateLabel.setXY(248, 3);
    dateLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    dateLabel.setLinespacing(0);
    dateLabelBuffer[0] = 0;
    dateLabel.setWildcard(dateLabelBuffer);
    dateLabel.resizeToCurrentText();
    dateLabel.setTypedText(touchgfx::TypedText(T_DATE));

    y_axisName.setXY(29, 1);
    y_axisName.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    y_axisName.setLinespacing(0);
    y_axisNameBuffer[0] = 0;
    y_axisName.setWildcard(y_axisNameBuffer);
    y_axisName.resizeToCurrentText();
    y_axisName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8JSV));

    add(box1);
    add(graph1);
    add(debugText);
    add(timeLabel4);
    add(timeLabel3);
    add(timeLabel2);
    add(timeLabel1);
    add(dateLabel);
    add(y_axisName);
}

void customGraphBase::initialize()
{

}

void customGraphBase::graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value)
{
    if (&src == &graph1)
    {
        //Interaction2
        //When graph1 clicked call virtual function
        //Call graph1clicked
        graph1clicked(value);
    }
}

void customGraphBase::graphDraggedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphDragEvent& value)
{
    if (&src == &graph1)
    {
        //Interaction1
        //When graph1 dragged call virtual function
        //Call graph1Dragged
        graph1Dragged(value);
    }
}

