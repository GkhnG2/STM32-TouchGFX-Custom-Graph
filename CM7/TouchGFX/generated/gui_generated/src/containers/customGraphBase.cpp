/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/customGraphBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

customGraphBase::customGraphBase() :
    graphDraggedCallback(this, &customGraphBase::graphDraggedCallbackHandler),
    graphClickedCallback(this, &customGraphBase::graphClickedCallbackHandler)
{
    setWidth(310);
    setHeight(200);
    box1.setPosition(0, 0, 310, 200);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box1);

    graph1.setPosition(0, 0, 310, 200);
    graph1.setScaleX(1);
    graph1.setScaleY(10);
    graph1.setGraphAreaMargin(25, 45, 5, 40);
    graph1.setGraphAreaPadding(0, 0, 0, 0);
    graph1.setGraphRangeX(0, 60);
    graph1.setGraphRangeY(-100, 100);
    graph1.setDragAction(graphDraggedCallback);
    graph1.setClickAction(graphClickedCallback);
    graph1MajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graph1MajorXAxisGrid.setInterval(15);
    graph1MajorXAxisGrid.setLineWidth(1);
    graph1MajorXAxisGrid.setScale(1);
    graph1.addGraphElement(graph1MajorXAxisGrid);

    graph1MajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    graph1MajorYAxisGrid.setInterval(20);
    graph1MajorYAxisGrid.setLineWidth(1);
    graph1MajorYAxisGrid.setScale(10);
    graph1.addGraphElement(graph1MajorYAxisGrid);

    graph1MajorXAxisLabel.setInterval(15);
    graph1MajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_64A2));
    graph1MajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    graph1MajorXAxisLabel.setScale(1);
    graph1.addBottomElement(graph1MajorXAxisLabel);

    graph1MajorYAxisLabel.setInterval(40);
    graph1MajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_P91H));
    graph1MajorYAxisLabel.setLabelDecimals(1);
    graph1MajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    graph1MajorYAxisLabel.setScale(10);
    graph1.addLeftElement(graph1MajorYAxisLabel);

    graph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(50, 194, 55));
    graph1Line1.setPainter(graph1Line1Painter);
    graph1Line1.setLineWidth(4);
    graph1.addGraphElement(graph1Line1);


    add(graph1);

    debugText.setXY(126, 0);
    debugText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    debugText.setLinespacing(0);
    Unicode::snprintf(debugTextBuffer, DEBUGTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IZT7).getText());
    debugText.setWildcard(debugTextBuffer);
    debugText.resizeToCurrentText();
    debugText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LR9V));
    add(debugText);

    timeLabel4.setXY(278, 180);
    timeLabel4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel4.setLinespacing(0);
    timeLabel4Buffer[0] = 0;
    timeLabel4.setWildcard(timeLabel4Buffer);
    timeLabel4.resizeToCurrentText();
    timeLabel4.setTypedText(touchgfx::TypedText(T_TIMEL4));
    add(timeLabel4);

    timeLabel3.setXY(215, 180);
    timeLabel3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel3.setLinespacing(0);
    timeLabel3Buffer[0] = 0;
    timeLabel3.setWildcard(timeLabel3Buffer);
    timeLabel3.resizeToCurrentText();
    timeLabel3.setTypedText(touchgfx::TypedText(T_TIMEL3));
    add(timeLabel3);

    timeLabel2.setXY(151, 180);
    timeLabel2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel2.setLinespacing(0);
    timeLabel2Buffer[0] = 0;
    timeLabel2.setWildcard(timeLabel2Buffer);
    timeLabel2.resizeToCurrentText();
    timeLabel2.setTypedText(touchgfx::TypedText(T_TIMEL2));
    add(timeLabel2);

    timeLabel1.setXY(84, 180);
    timeLabel1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeLabel1.setLinespacing(0);
    timeLabel1Buffer[0] = 0;
    timeLabel1.setWildcard(timeLabel1Buffer);
    timeLabel1.resizeToCurrentText();
    timeLabel1.setTypedText(touchgfx::TypedText(T_TIMEL1));
    add(timeLabel1);

    dateLabel.setXY(215, 0);
    dateLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    dateLabel.setLinespacing(0);
    Unicode::snprintf(dateLabelBuffer, DATELABEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WAHU).getText());
    dateLabel.setWildcard(dateLabelBuffer);
    dateLabel.resizeToCurrentText();
    dateLabel.setTypedText(touchgfx::TypedText(T_DATE));
    add(dateLabel);

    y_axisName.setXY(0, 0);
    y_axisName.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    y_axisName.setLinespacing(0);
    y_axisNameBuffer[0] = 0;
    y_axisName.setWildcard(y_axisNameBuffer);
    y_axisName.resizeToCurrentText();
    y_axisName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_627Q));
    add(y_axisName);
}

customGraphBase::~customGraphBase()
{

}

void customGraphBase::initialize()
{

}

void customGraphBase::graphDraggedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphDragEvent& value)
{
    if (&src == &graph1)
    {
        //Interaction1
        //When graph1 dragged call virtual function
        //Call graph1Dragged
        graph1Dragged(value);
    }
}

void customGraphBase::graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value)
{
    if (&src == &graph1)
    {
        //Interaction2
        //When graph1 clicked call virtual function
        //Call graph1clicked
        graph1clicked(value);
    }
}
